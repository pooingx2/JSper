    private String name;		// function 이름
    private int depth;			// function 깊이
    private String parent;		// 부모 function 이름
    private String comment;		// function 바로 위의 주석
    private String type;		// function Type (Declaration, Expression, Anonymous)
    private String code;		// function 내부의 코드
    private List<Function> fList;		// function 리스트
    private List<CodeMap> cList;		// function 내부 코드 리스트 (Before sorting)

    // parser 실행전 init()
    public void init(){
    	depth=0;
        initData();
    	fList = new ArrayList<Function>();
    	cList = new ArrayList<CodeMap>();
    }
    
    // insert후 데이터 초기화
    public void initData(){
        name = "0";
        //depth = 0;
        parent = "0";
        comment = "0";
        type = "0";
        code = "0";
    }
    public List<Function> getFlist(){
        return fList;
    }
    public List<CodeMap> getClist(){
        return cList;
    }
    

    // 부모 function의 이름을 파악하여 list에 add한다.
    public void insertFunction(){
        int subDep;
        if(depth==0) parent="0";
        else{
        	subDep=depth-fList.get(fList.size()-1).getDepth();
        	if(subDep>0) parent=fList.get(fList.size()-1).getName();
        	else{
        		for(int i=fList.size()-1;i>=0;i--){
        			if(depth==fList.get(i).getDepth()) {
        				parent=fList.get(i).getParent();
        				break;
        			}
        		}
        	}
        }
    	fList.add(new Function(name,depth,parent,comment,type, code));
    	initData();
    }